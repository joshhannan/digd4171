Assignment #2 - Due Wednesday, 9/6 at 12AM
	1.  Add additional 'More Information' section
		- write accordion function to build accordion with jQuery
	2.  Using week 1's homepage build, make entire homepage responsive utilizing best practices and what we talked about in class.
		- fluid techniques instead of adaptive




HTML5
	Further reading links:
		https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5
		https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML_sections_and_outlines

General Page structuring / HTML / CSS tips
	- Outline your HTML BEFORE you begin stying.  Make note of grouping your block elements into relatable, understandable classes.
	- Try to name your class selectors simple things, such as 'item', 'advertisement', and 'page-header'.  This helps keep your styles clean and orderly.
		- Opinion:  Leave IDs for javascript selectors instead of for CSS.  Classes are reusable, ID's aren't and are too specific.
	- Avoid using <br/> tags to style, rely on CSS for styles in p tags / other inline text elements
	- 

CSS tips / tricks
	- CSS Attribute:  to align inline-block elements horizontally, use the vertical-align property.
		https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align
	- Utilize the nth-child property for series of elements with the same class instead of an additional class selector
		https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child
	- Responsive images
		- try to wrap image tag with container div, then you can control the image with that container class selector for positioning while leaving the image to be scalable.
			- for full width scaling:
				width: 100%;
				height: auto;
			- for full height scaling:
				width: auto;
				height: 100%
			- to keep aspect ratio integrity, DO NOT use:
				width: 100%;
				height: 100%
	- the calc( ) function
		https://developer.mozilla.org/en-US/docs/Web/CSS/calc
	- box-sizing
		https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing

Responsive Media Queries
	- Recommend starting with mobile designs first and using min-width for elements to 'grow'
	- @media only screen and (min-width: 700px ) { .selector { position: relative; } }

jQuery
	- console.log( 'is your friend' );
	- do your best to load your scripts in the footer
		- better for page load
	- Easier to style additional classes and toggle than using javascript to style elements.  Keep CSS CSS, keep HTML HTML.
	- Objects
		- array of data properties when you call $('.element') used to target elements
			https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects
	- within an object function such as $('.element').click(function() {  });
		- to reference the main element within the function, you can shorthand with $(this)

Further investigation / learning:
	- investigating SASS as a CSS tool to organize / streamline your CSS
	- Font Awesome
	- SVGs

